server:
  port: 8080
  servlet:
    context-path: /api/mobile

spring:
  application:
    name: rentesla-mobile-backend
  
  # Database Configuration (Docker PostgreSQL)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5433/rentesla}
    username: ${DB_USER:rentesla_user}
    password: ${DB_PASSWORD:rentesla_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
      max-lifetime: 1800000  # 30 minutes
      connection-test-query: SELECT 1
      pool-name: RenTeslaHikariCP
      # PostgreSQL specific settings
      data-source-properties:
        cachePrepStmts: true
        useServerPrepStmts: true
        reWriteBatchedInserts: true
        socketTimeout: 30
        tcpKeepAlive: true
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: Europe/Istanbul
    open-in-view: false
  
  # Jackson Configuration
  jackson:
    time-zone: Europe/Istanbul
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
    default-property-inclusion: non-null
  
  # Security Configuration (Removed basic auth - using JWT instead)
  # security:
  #   user:
  #     name: admin
  #     password: ${ADMIN_PASSWORD:admin123}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-jwt-secret-key-here-should-be-at-least-256-bits-long-secure-key}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

# Demo Admin Configuration (Remove in production!)
demo:
  admin:
    username: ${DEMO_ADMIN_USERNAME:admin}
    password: ${DEMO_ADMIN_PASSWORD:admin123}

# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  show-actuator: true

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

# Logging Configuration
logging:
  level:
    com.rentesla: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Custom Application Properties
app:
  name: RenTesla Mobile Backend
  version: 1.0.0
  description: Mobile backend microservice for Tesla vehicle rental system
  timezone: Europe/Istanbul
  
  # CORS Configuration
  cors:
    allowed-origin-patterns: 
      - "http://localhost:*"
      - "https://localhost:*"
      - "exp://*:*"
      - "http://192.168.*:*"
      - "https://192.168.*:*"
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers: "*"
    allow-credentials: false
  
  # Tesla API Integration
  tesla-api:
    base-url: ${TESLA_API_BASE_URL:http://localhost:8000}
    timeout: 30000

  # Frontend URL
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}

